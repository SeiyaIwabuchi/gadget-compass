---
// FeaturedSection.astro
import { getCollection } from 'astro:content';
import RankingCard from './RankingCard.astro';

// ÂÆüÈöõ„ÅÆË®ò‰∫ã„Éá„Éº„Çø„ÇíÂèñÂæó
const allArticles = await getCollection('articles');

// „É©„É≥„Ç≠„É≥„Ç∞Ë®àÁÆóÁî®„ÅÆÈñ¢Êï∞
function calculateRankingScore(article: any) {
    const stars = article.data.stars || 0;
    const pubDate = new Date(article.data.pubDate);
    const daysSincePublished = Math.floor((Date.now() - pubDate.getTime()) / (1000 * 60 * 60 * 24));
    
    // „Çπ„Ç≥„Ç¢Ë®àÁÆó: ÊòüË©ï‰æ° + Êñ∞„Åó„Åï„Éú„Éº„Éä„Çπ
    const recencyBonus = Math.max(0, 30 - daysSincePublished) * 0.1; // 30Êó•‰ª•ÂÜÖ„Å™„ÇâÊñ∞„Åó„Åï„Éú„Éº„Éä„Çπ
    return stars + recencyBonus;
}

// Ë®ò‰∫ã„Çí„É©„É≥„Ç≠„É≥„Ç∞È†Ü„Å´„ÇΩ„Éº„Éà„Åó„ÄÅ‰∏ä‰Ωç3‰Ωç„ÇíÂèñÂæó
const rankedArticles = allArticles
    .map(article => ({
        ...article,
        rankingScore: calculateRankingScore(article)
    }))
    .sort((a, b) => b.rankingScore - a.rankingScore)
    .slice(0, 3);

// „É©„É≥„Ç≠„É≥„Ç∞Áî®„ÅÆ„Éá„Éº„ÇøÂΩ¢Âºè„Å´Â§âÊèõ
const featuredArticles = rankedArticles.map((article, index) => {
    const rank = index + 1;
    
    // import.meta.env.BASE_URL„Çí‰ΩøÁî®„Åó„Å¶basePath„ÇíËÄÉÊÖÆ„Åó„ÅüURL„ÇíÊßãÁØâ
    const basePath = import.meta.env.BASE_URL;
    const articleUrl = `${basePath}/articles/${article.slug}`; // ÈáçË§á„Åô„Çã„Çπ„É©„ÉÉ„Ç∑„É•„ÇíÈô§Âéª

    // ÁµµÊñáÂ≠ó„Çí„Çø„Ç∞„Éô„Éº„Çπ„ÅßÊ±∫ÂÆö
    const getEmojiFromTags = (tags: string[]) => {
        const tagMap: Record<string, string> = {
            '„Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞': 'üíª',
            'React': '‚öõÔ∏è',
            '„É¨„Éì„É•„Éº': 'üì±',
            'Apple': 'üçé',
            '„Ç™„Éº„Éá„Ç£„Ç™': 'üéß',
            '„Çµ„Éº„Éê„Éº': 'üñ•Ô∏è',
            '„ÉØ„Ç§„É§„É¨„Çπ': 'üì°',
            '„Ç¨„Ç∏„Çß„ÉÉ„Éà': 'ÔøΩ',
            'Êñ∞Ë£ΩÂìÅ': '‚ú®',
        };
        
        for (const tag of tags) {
            if (tagMap[tag]) return tagMap[tag];
        }
        return 'üìÑ'; // „Éá„Éï„Ç©„É´„Éà
    };
    
    // Áµ±Ë®à„Éá„Éº„Çø„ÇíÁîüÊàêÔºàÂÆüÈöõ„ÅÆ„Éá„Éº„Çø„Åå„Å™„ÅÑ„Åü„ÇÅ„É¢„ÉÉ„ÇØÔºâ
    const generateStats = (rank: number) => {
        const baseViews = 3000 - (rank - 1) * 500;
        const baseComments = 30 - (rank - 1) * 5;
        const baseLikes = 200 - (rank - 1) * 50;
        
        return {
            views: `${baseViews.toLocaleString()} views`,
            comments: `${baseComments} comments`,
            likes: `${baseLikes} likes`
        };
    };
    
    const stats = generateStats(rank);
    
    return {
        rank,
        slug: article.slug,
        url: articleUrl,
        emoji: getEmojiFromTags(article.data.tags || []),
        tags: article.data.tags || [],
        title: article.data.title,
        rating: article.data.stars || 4.0,
        readTime: `Á¥Ñ${article.data.timeRequired || '10'}ÂàÜ`,
        excerpt: article.data.description || article.body.slice(0, 100) + '...',
        views: stats.views,
        comments: stats.comments,
        likes: stats.likes
    };
});
---

<section class="featured-section">
    <div class="section-header">
        <div class="section-icon">üèÜ</div>
        <h2 class="section-title">Ê≥®ÁõÆ„ÅÆË®ò‰∫ã„É©„É≥„Ç≠„É≥„Ç∞</h2>
    </div>
    <div class="ranking-container">
        {featuredArticles.map(article => (
            <RankingCard
                rank={article.rank}
                slug={article.slug}
                url={article.url}
                emoji={article.emoji}
                tags={article.tags}
                title={article.title}
                rating={article.rating}
                readTime={article.readTime}
                excerpt={article.excerpt}
                views={article.views}
                comments={article.comments}
                likes={article.likes}
            />
        ))}
    </div>
</section>

<style>
    .featured-section {
        margin-bottom: 2rem;
    }
    
    .section-header {
        display: flex;
        align-items: center;
        gap: 1rem;
        margin-bottom: 2rem;
        padding: 0 1.5rem;
        padding-top: 1.5rem;
    }
    
    .section-title {
        font-size: 1.25rem;
        font-weight: 700;
        color: var(--text-primary);
    }
    
    .section-icon {
        width: 40px;
        height: 40px;
        background: var(--gradient);
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 1.2rem;
    }
    
    .ranking-container {
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
        padding: 0 1.5rem 1.5rem;
    }
    
    /* Fade-in animation timing for container */
    .ranking-container :global(.fade-in-card:nth-child(1)) {
        transition-delay: 0s;
    }
    
    .ranking-container :global(.fade-in-card:nth-child(2)) {
        transition-delay: 0.1s;
    }
    
    .ranking-container :global(.fade-in-card:nth-child(3)) {
        transition-delay: 0.2s;
    }
</style>
